{"version":3,"sources":["pages/ViewEvent.tsx"],"names":["ViewEvent","match","useState","specificEvent","setSpecificEvent","events","useTypedSelector","useSelector","state","EventState","useEffect","id","filter","data","title","getSpecificEvent","params","className","style","color","src","img","alt","text","url","size","round","map","event","key","to"],"mappings":"gOAsFeA,UA1DoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACNC,mBAAc,IADR,mBACzCC,EADyC,KAC1BC,EAD0B,KAG1CC,GAASC,EADyCC,MACxB,SAAAC,GAAK,OAAIA,EAAMC,cAkB/C,OAJAC,qBAAU,YAZe,SAACC,EAAYN,GAMpCA,EAAOO,QAAO,SAAAC,GACZ,GAAIA,EAAKC,QAAUH,EACjB,OAAOP,EAAiBS,MAK5BE,CAAiBd,EAAMe,OAAOL,GAAIN,MAIlC,oCACE,yBAAKY,UAAU,aAAaC,MAAO,CAAEC,MAAO,UAC1C,yBAAKF,UAAU,sBACb,4BAAKd,EAAcW,OACnB,yCACA,6BACA,yBAAKM,IAAKjB,EAAckB,IAAKC,IAAI,UACjC,uBAAGL,UAAU,cAAcd,EAAcoB,MACzC,yBAAKN,UAAU,sBACb,8BAAM,kBAAC,IAAD,CAAqBO,IAAG,kBAAarB,EAAcW,QAAS,kBAAC,IAAD,CAAcW,KAAM,GAAIC,OAAO,MACjG,8BAAM,kBAAC,IAAD,CAAoBF,IAAG,kBAAarB,EAAcW,QAAS,kBAAC,IAAD,CAAaW,KAAM,GAAIC,OAAO,MAC/F,8BAAM,kBAAC,IAAD,CAAqBF,IAAG,kBAAarB,EAAcW,QAAS,kBAAC,IAAD,CAAcW,KAAM,GAAIC,OAAO,QAIrG,yBAAKT,UAAU,kBACb,6BACE,qDAEDZ,EAAOsB,KAAI,SAAAC,GAAK,OACf,yBAAKX,UAAU,YAAYY,IAAKD,EAAMjB,IACpC,kBAAC,IAAD,CAAMmB,GAAE,kBAAaF,EAAMd,QACzB,yBAAKM,IAAKQ,EAAMP,IAAKC,IAAI,SACzB,6BACE,4BAAKM,EAAMd","file":"static/js/11.0553c03c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport {\r\n  FacebookShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n} from \"react-share\";\r\n\r\ninterface Props {\r\n  match?: any;\r\n  data?: any;\r\n  id?: any;\r\n  date: any;\r\n}\r\n\r\ninterface RootState {\r\n  EventState: Array<{\r\n    id: number;\r\n    title: string;\r\n    img: string;\r\n    text: string;\r\n  }>;\r\n}\r\n\r\nconst ViewEvent: React.FC<Props> = ({ match }) => {\r\n  const [specificEvent, setSpecificEvent] = useState<any>('');\r\n  let useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n  const events = useTypedSelector(state => state.EventState);\r\n\r\n  const getSpecificEvent = (id: string, events: Array<{\r\n    id: number;\r\n    title: string;\r\n    img: string;\r\n    text: string;\r\n  }>) => {\r\n    events.filter(data => {\r\n      if (data.title === id) {\r\n        return setSpecificEvent(data);\r\n      }\r\n    })\r\n  };\r\n  useEffect(() => {\r\n    getSpecificEvent(match.params.id, events);\r\n\r\n  })\r\n  return (\r\n    <>\r\n      <div className=\"view-event\" style={{ color: 'black' }}>\r\n        <div className=\"view-event-content\">\r\n          <h2>{specificEvent.title}</h2>\r\n          <p>April 2020</p>\r\n          <hr />\r\n          <img src={specificEvent.img} alt=\"News \" />\r\n          <p className=\"event-text\">{specificEvent.text}</p>\r\n          <div className=\"view-event-socials\">\r\n            <span><FacebookShareButton url={`/events/${specificEvent.title}`}><FacebookIcon size={32} round={true} /></FacebookShareButton></span>\r\n            <span><TwitterShareButton url={`/events/${specificEvent.title}`}><TwitterIcon size={32} round={true} /></TwitterShareButton></span>\r\n            <span><WhatsappShareButton url={`/events/${specificEvent.title}`}><WhatsappIcon size={32} round={true} /></WhatsappShareButton></span>\r\n           \r\n          </div>\r\n        </div>\r\n        <div className=\"view-event-all\">\r\n          <div>\r\n            <h4>Read Our Latest News</h4>\r\n          </div>\r\n          {events.map(event => (\r\n            <div className=\"event-box\" key={event.id}>\r\n              <Link to={`/events/${event.title}`}>\r\n                <img src={event.img} alt=\"news\" />\r\n                <div>\r\n                  <h3>{event.title}</h3>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ViewEvent;"],"sourceRoot":""}